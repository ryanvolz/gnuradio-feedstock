{% set version = "3.7.11" %}

package:
  name: gnuradio
  version: {{ version }}

source:
  url: https://gnuradio.org/releases/gnuradio/gnuradio-{{ version }}.tar.gz
  sha256: 87d9ba3183858efdbb237add3f9de40f7d65f25e16904a9bc8d764a7287252d4

build:
  number: 2
  skip: True  # [win]
  detect_binary_files_with_prefix: True

requirements:
  build:
    - toolchain
    - cmake >=3.2
    - boost 1.64.*
    - libusb >=1
    - fftw
    - pkg-config
    - cheetah
    - log4cpp
    - cppunit
  # python wrappers
    - python >=2.7,<3
    - swig
    - numpy
  # wavelet
    - gsl
  # qtgui
    - pyqt >=4,<5
    - qwt
  # wxgui
    - wxpython
    - lxml
  # audio
    - portaudio
  # zeromq
    - zeromq
    - cppzmq
  # USRP hardware driver
    - uhd

  run:
    - boost 1.64.*
    - fftw
    - python >=2.7,<3
    - numpy
    - cheetah
    - log4cpp
    - gsl
    - pyqt >=4,<5
    - qwt
    - wxpython
    - lxml
    - portaudio
    - zeromq
    - pyzmq
    - uhd

test:
  imports:
    - gnuradio.analog
#    - gnuradio.atsc
    - gnuradio.audio
    - gnuradio.blocks
    - gnuradio.channels
#    - gnuradio.comedi
    - gnuradio.digital
#    - gnuradio.dtv
#    - gnuradio.fcd
#    - gnuradio.fec
    - gnuradio.fft
    - gnuradio.filter
    - gnuradio.gr
#    - gnuradio.noaa
#    - gnuradio.pager
    - gnuradio.qtgui
#    - gnuradio.trellis
    - gnuradio.uhd
#    - gnuradio.video_sdl
#    - gnuradio.vocoder
#    - gnuradio.wavelet
    - gnuradio.wxgui
#    - gnuradio.zeromq
    - pmt

about:
  home: http://gnuradio.org/
  license: GPL-3.0
  license_file: COPYING
  summary: 'The free and open software radio ecosystem'
  description: |
    GNU Radio is a free software development toolkit that provides the signal
    processing runtime and processing blocks to implement software radios using
    readily-available, low-cost external RF hardware and commodity processors.
    It is widely used in hobbyist, academic and commercial environments to
    support wireless communications research as well as to implement real-world
    radio systems.

    GNU Radio applications are primarily written using the Python programming
    language, while the supplied, performance-critical signal processing path
    is implemented in C++ using processor floating point extensions where
    available. Thus, the developer is able to implement real-time, high-
    throughput radio systems in a simple-to-use, rapid-application-development
    environment.

  doc_url: http://gnuradio.org/doc/doxygen/
  dev_url: http://gnuradio.org/redmine/projects/gnuradio/wiki/Development

extra:
  recipe-maintainers:
    - ryanvolz
